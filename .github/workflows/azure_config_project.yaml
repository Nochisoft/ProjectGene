# Work flow using Azure CLI to create project environment on Azure

name: Create Azure environment for project
on:
  push:
    paths: 
      [ .github/workflows/azure_config_project.yaml ]

jobs:
  create_rg:
    name: Create Azure Resource Group 
    runs-on: ubuntu-latest
    env:
      resource_group_name: "test-rg" 
      azure_region: "southIndia"
      project_name: "test-prj"
      projectspn: "none"
       

    steps:
      - name: 'Checkout Github Action'
        uses: actions/checkout@master
      
      - name: azure authentication
        uses: azure/login@v1.1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: Create Azure ResourceGroup
        uses: azure/CLI@v1
        with:
          inlineScript: |
            #apt upgrade jq
            
            #account details in json format
            accjson=$(az account show)
            #resource group details in json format
            rgjson=$(az group create --name ${{env.resource_group_name}} --location ${{ env.azure_region }})

            # echo for debugging
            echo "$accjson"
            echo "$rgjson"

            # get the subscription ID
            subscriptionId=$(echo "$accjson" | jq '.id')
            tenantId=$(echo "$accjson" | jq '.tenantId')

            # echo for debugging
            echo "$subscriptionId"
            echo "$tenantId"

            # get the resource group id (remove the quotes - raw) and location
            rgid=$(echo "$rgjson" | jq '.id' -r)
            rgloc=$(echo "$rgjson" | jq '.location')

            # echo for debugging
            echo "$rgid"
            echo "$rgloc"

            # create the Service Principal
            spn_name='${{ env.project_name }}spn'
            spjson=$(az ad sp create-for-rbac --name $spn_name --role Contributor --scopes $rgid  --sdk-auth)
            

            # get the clientId and
            #clientId=$(echo "$spjson" | jq '.appId' -r)
            #clientSecret=$(echo "$spjson" | jq '.password' -r)
            
            # echo for debugging
            #echo "$clientId"
            #echo "$clientSecret"
                                 
            # push the spn to Azure keyvault
            echo $spjson
            v1=$(echo "$spjson" | tr -d '\n\t')
            v2=$(echo $v1 | openssl base64 -A)
            #v2=$(echo "$v1" | base64 -w0)
            v3=$(echo "$v2" | base64 -d)
            echo $v2
            echo $v3
            az keyvault secret set -n $spn_name --vault-name "kv-tesrg"  --value "$v2"
            gitkv=$(az keyvault secret show --name $spn_name --vault-name "kv-tesrg" --query value)
            gitkvfin=$(echo "$gitkv" | tr -d '\"'| base64 -d)
            
            echo $gitkvfin
            echo "::set-env name=projectspn::$gitkvfin"
        # push the spn details to the project as AZURE_CREDENTIALS
      - name: save the spn 
        run: echo ${{ env.projectspn }} > spn.txt
      - name: Provision secret
        uses: pierluigi/repository-secret-javascript-action@main
        with:
          github-token: ${{ secrets.ORG_SECRETS_PAT }}
          repository: 'Nochisoft/hack-project-2020-lt04m'
          secret-name: AZURE_CREDENTIALS
          secret-value: ${{ env.projectspn }}           

